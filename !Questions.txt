1)Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

TwoSum problem

2)give output
l1 = [1,2,3]
L2 = [4,5,6]
Output = {1:4,2:5,3:6}

3)Print the number whose square is present in the List

x = [2,4,3,18,9,16]

4)find the similar value from two dict\
dict1 = {"month":"January","days":31}
dict2 = {"month":"March","days":31}
output = {"days': 31}

5)
input = {'a': 1,'b':2, 'c':{'d':5,'e':6}}
output = {'a':1,'b':2,'c_d':5,'c_e':6}
input2 = {'a': 1,'b':2, 'c':{'d':{'f':7},'e':6}}
output2 = {'a':1,'b':2,'c_d':5,'c_e':6, 'c_d_f':7}


6)
list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']
output >> ['1a', '2b', '3c']

7)
data={'one':1,'three':3,'five':5,'two':2}
>>> print({key: value for key, value in sorted(data.items(), key=lambda i: i[1])})

8)
data1 = ['1','2','3','4','5']
d=[2,3,0]
>>>res = list(map(data1.__getitem__, d))
>>>print(res)

9)
lst = [1,2,3,4,5,6,7,8,9]
output = [8,7,6,5,4,3,2,1,9]

10)
arr= ["a", "b", "c","d","a","e","f","b","a"]
output = {"a":3,"b":2,"c":1,"d":1,"e":1,"f":1}

11)
input = 5
output = {5:25}

12)
str1 = "{()[]}[{}]"
str2 = "[(]){}([])"
str3 = "[{()}][()]"
str4 = "[{(])}][({)]"

define in a function, which will return balanced(str1,str3) and unbalanced(str2,str4).

13)
input = 'abcdefghijkl'
change the index no.5 of the string to 'x'
output = 'abcdxfghijkl'
Replace Multiple character with the same/different character

14)
compress string
input = 'aaaabbbcccccddefff'
output = 'a4b3c5d2e1f3'

15)
FIZZBUZZ
>> If number is divisible by 3, return Fizz
>> If number is divisible by 5, return Buzz
>> If number is divisible by 3 and 5, return FizzBuzz

16)
Character Occurance
>> Using Dict
>> Counter inbuilt method
>> count method

17)
Modify string format
1.>> input = 'I.Am.A.Coder', o/p= 'I_aM_A_cODER'
2.>> input = 'This_Is_A_Tablet', o/p= 'tHIS.iS.a.tABLET'

18)
Second Largest Number
list1 = [7,22,35,65,42,11,3,29,59]
output = 59

19)
sum of digits & factorial

20) 
take a interval of 1 to 1_lakh where
the 'summation' of the 'factorial of each digit'
equals to the 'actual number'
>> 145! = 1! +4! +5! = 1+24+120= 145 

21)
sort the array in assecending order without using sort()
input = [4,7,9,13,3,6,15,11,2]
output = [2, 3, 4, 6, 7, 9, 11, 13, 15]

22)
sorting using custom key (asc/ desc of age)
employees = [
    {'Name': 'Alan Turing', 'age': 25, 'salary': 10000}
    ]

23)
sort the array by the frequency of the number(count of the occurances)
input = [0,1,8,1,2,4,2,3,3,2,0,2,7,0,5,0,2,1]
output = [2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 3, 3, 4, 5, 7, 8]

24)
sort the value in dict 
input = {1: 2, 3: 4, 4: 3, 2: 1, 6: 0, 8: 5}
output = {6: 0, 2: 1, 1: 2, 4: 3, 3: 4, 8: 5}

25)
>>string.py
char = 'python is real'
o/p = 'real is python'

26)
Input: [a, b, c], [1, 2, 3]
Input2: [a, b, c, d, e], [1, 2, 3]
Output: [a, 1, b, 2, c, 3]
Output2: [a, 1, b, 2, c, 3, d, e]

27)
Given a snake case string, convert to camel case.
test_str = 'geeksforgeeks_is_best_for_geeks' 
Output : 'geeksforgeeksIsBestForGeeks'

28)
sort the array using one loop O(n), without use any inbuilt function
input = [17,-45,28,-13,58,9,-72]
output = [-72, -45, -13, 9, 17, 28, 58]

29)print the months which have 30 days

d=[{"month":"January","days":31},{"month":"February","days":29},
 {"month":"March","days":31},{"month":"April","days":30},
{"month":"May","days":31},{"month":"June","days":30},
 {"month":"July","days":31},{"month":"August","days":31},
 {"month":"September","days":30},{"month":"October", "days":31},
 {"month":"November","days":30}, {"month":"December","days":31}]

output=[{'month': 'April', 'days': 30},
{'month': 'June', 'days': 30}, {'month':
'September', 'days': 30}, {'month': 'Nogvember', 'days': 30}]

y=[x for x in d if x['days']==30]

30)
print which no. is repeated maximum times into a list?
list1 = [4,7,9,2,7,5,4,9,7,1,8,4,6,7,3]


31)
check the count of vowel: 
input = 'umasuthan'
output= {'u':2, 'a': 2, 'm': 0, 'n': 0}

32)Decorator

33) Merge two sorted list
list1 = [1,3,5,7,9]
list2 = [2,4,6,8,10]


34)# 1st interview
input: "hello world"
output: "d1r1w1o2l3e1h1"

35) sort as per len of str and after value
input_list = ['1','1.3','1.14','1.11']
output = ['1', '1.3', '1.11', '1.14']

36)remove dupliacte elements from the list
list1 = [4,5,1,3,2,1,4,3,1,2,5,4,6,3,1,2,7]
output = []

37) Reverse an array upto a given position
input = [1, 2, 3, 4, 5, 6]
k = 3
output = [1, 2, 3, 4, 6, 5]

38)
sort the sentence by the lenght of the word
str1 = 'Prasnna interviwing Jagdish, If Jagdish qualify He will be move to final round'

39) how to find the missing element in list or in a range
list1 = [0, 4, 6, 9, 8, 1, 3] 

40) remove only first duplicate number in the list 
lst = [11, 5, 6, 3, 5, 7, 6, 1, 3, 6, 7]

41) pattern program (pyramid)
42) Easy pattern program
43) Longest Substring Without Repeating Characters
    Input: s = "abcabcbb"
    Output: 3
    Explanation: The answer is "abc", with the length of 3.

44) Reverse the "jagdish" only on the above string
string = "$@&*!%jagdish#@$@&"
output = "$@&*!%hsidgaj#@$@&"

45) Reverse only Characters
string = "!!j@@a###g$$d**i&&s**h"
output = "!!h@@s###i$$d**g&&a**j"

46) reverse the string using two pointers
string = "helloworld"
output = "dlrowolleh"
